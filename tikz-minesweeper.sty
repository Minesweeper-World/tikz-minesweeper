\ProvidesPackage{tikz-minesweeper}
[2022/01/07, v0.1.0]
\RequirePackage{tikz}
\RequirePackage{expl3}
\RequirePackage{xstring}

% Color tables
\definecolor{color0}{RGB}{192,192,192}
\definecolor{color1}{RGB}{0,0,255}
\definecolor{color2}{RGB}{0,128,0}
\definecolor{color3}{RGB}{255,0,0}
\definecolor{color4}{RGB}{0,0,128}
\definecolor{color5}{RGB}{122,43,26}
\definecolor{color6}{RGB}{0,128,128}
\definecolor{color7}{RGB}{0,0,0}
\definecolor{color8}{RGB}{128,128,128}
\definecolor{cborder}{RGB}{160,160,160}
\definecolor{clight}{RGB}{255,255,255}

% Default unit
\tikzset{x=1pt, y=1pt}

%%%%%%%%%
% CELLS %
%%%%%%%%%
% \flag : draw a flag in cell
% \mine : draw a mine in cell
% \cellup : draw an up cell
% \celldown : draw a down cell
% \cellnum{number} : fill cell with number
% \cell{x}{y}{content} : draw a cell at (x,y) and put content in it. If the content is a number then the cell is down. otherwise the cell is up. Let content=f to put a flag.
% \row{x}{content} : draw the x-th row with content. For example, \row{0}{1{20}0fA}

\ExplSyntaxOn
\cs_set:Nn \element_flag: {
    \fill[color7] (5, -13) rectangle (12, -12); % lower base
    \fill[color7] (6.5, -13) rectangle (10.5, -11); % upper base
    \fill[color7] (8.5, -13) rectangle (9.5, -4); % pole
    \fill[color3] (8.5, -4.5) -- (4, -6.5) -- (8.5, -8.5) -- cycle; % red flag
}

\cs_set:Nn \element_mine: {
    \int_step_inline:nnnn {0} {45} {135} {
        \fill[color7, xshift=8.5, yshift=-8.5, rotate=##1] (-6.5, 0.4) -- (0, 1.5) -- (6.5, 0.4) -- (6.5, -0.4) -- (0, -1.5) -- (-6.5, -0.4) -- cycle; % spikes
    }
    \shade[ball~color=color7] (8.5,-8.5) circle (4.5); % body
}

\cs_set:Nn \element_cellup: {
    \fill[color0] (0, 0) rectangle (16, -16); % background
    \fill[clight] (0, 0) -- (16, 0) -- (14, -2) -- (2, -2) -- (2, -14) -- (0, -16) -- cycle; % highlight
    \fill[color8] (16, -16) -- (0, -16) -- (2, -14) -- (14, -14) -- (14, -2) -- (16, 0) -- cycle; % shade
}

\cs_set:Nn \element_celldown: {
    \fill[color8] (0, 0) -- (16, 0) -- (16, -1) -- (1, -1) -- (1, -16) -- (0, -16) -- cycle; % border
    \fill[color0] (1, -16) rectangle (16, -1); % background
}

\cs_set:Npn \element_cellnum:n #1 {
    \tl_set:Nn \l_tmpa_tl {color}
    \tl_put_right:Nn \l_tmpa_tl {#1}
    \node[text~centered, text=\l_tmpa_tl] at (8.5, -8.5) {\textbf{#1}};
}

\cs_set:Npn \element_cellcolored:n #1 {
    \tl_case:NnT #1 {
        r { \tl_set:Nn \l_tmpa_tl {red} }
        g { \tl_set:Nn \l_tmpa_tl {green} }
        b { \tl_set:Nn \l_tmpa_tl {blue} }
        c { \tl_set:Nn \l_tmpa_tl {cyan} }
        y { \tl_set:Nn \l_tmpa_tl {yellow} }
        o { \tl_set:Nn \l_tmpa_tl {orange} }
        l { \tl_set:Nn \l_tmpa_tl {lime} }
        t { \tl_set:Nn \l_tmpa_tl {teal} }
        v { \tl_set:Nn \l_tmpa_tl {violet} }
    } {
        \begin{scope}
            \fill[opacity=0.2, \l_tmpa_tl] (0, 0) rectangle (16, -16);
        \end{scope}
    }
}

\cs_set:Npn \element_cell:nnn #1#2#3 {
    \sffamily
    \tl_set:Nn \l_tmpa_tl {012345678}
    \tl_set:Nn \l_tmpb_tl {rgbcyoltv}
    \begin{scope}[xshift=#3*16, yshift=-#2*16]
        \tl_if_single:nTF {#1} {
            % single token
            \tl_if_in:NnTF \l_tmpa_tl {#1} { \element_celldown: \element_cellnum:n {#1} } % number
            {
                \tl_if_in:NnTF \l_tmpb_tl {#1} { \element_cellup: \element_cellcolored:n {#1} } % color
                {
                    \tl_case:NnF #1 {
                        f { \element_cellup: \element_flag: } % flag
                        m { \element_celldown: \element_mine: } % mine
                        - { \element_cellup: } % empty
                    } { \element_cellup: \node[text~centered, text={color7}] at (8, -8) {\textbf{#1}}; } % normal label
                }
            }
        } { \element_cellup: \node[text~centered, text={color7}] at (8, -8) {\textbf{\tiny #1}}; } % tiny label
    \end{scope}
}

\cs_set:Npn \element_line:nn #1#2#3 {
    \tl_set:Nn \l_tmpa_tl {#2}
    \int_zero:N \l_tmpa_int
    \tl_map_inline:Nn \l_tmpa_tl {
        \tl_case:Nn #3 {
            r { \element_cell:nnn {##1}{#1}{\l_tmpa_int} }
            c { \element_cell:nnn {##1}{\l_tmpa_int}{#1} }
        }
        \int_incr:N \l_tmpa_int
    }
}

\cs_set:Npn \element_border:nnn #1#2#3 {
    \bool_set_false:N \l_tmpa_bool
    \bool_set_false:N \l__ms_flagt_bool
    \bool_set_false:N \l__ms_flagl_bool
    \bool_set_false:N \l__ms_flagb_bool
    \bool_set_false:N \l__ms_flagr_bool
    \tl_set:Nn \l_tmpa_tl {#1}

    \tl_map_inline:Nn \l_tmpa_tl {
        \tl_case:Nn ##1 {
            - {
                \bool_set_true:N \l_tmpa_bool
                \bool_set_true:N \l__ms_flagt_bool
                \bool_set_true:N \l__ms_flagl_bool
                \bool_set_true:N \l__ms_flagb_bool
                \bool_set_true:N \l__ms_flagr_bool
            }
            t { \bool_set:Nn \l__ms_flagt_bool {!\l_tmpa_bool} }
            l { \bool_set:Nn \l__ms_flagl_bool {!\l_tmpa_bool} }
            b { \bool_set:Nn \l__ms_flagb_bool {!\l_tmpa_bool} }
            r { \bool_set:Nn \l__ms_flagr_bool {!\l_tmpa_bool} }
        }
    }

    \bool_if:NT \l__ms_flagt_bool {
        % side case: t
        \fill[clight] (0, 9) rectangle (#3*16, 12);
        \fill[color0] (0, 3) rectangle (#3*16, 9);
        \fill[cborder] (0, 0) rectangle (#3*16, 3);
        \draw[cborder,ultra~thin] (0, 12) -- (#3*16, 12);
    }

    \bool_if:NT \l__ms_flagl_bool {
        % side case: l
        \fill[clight] (-9, 0) rectangle (-12, -#2*16);
        \fill[color0] (-3, 0) rectangle (-9, -#2*16);
        \fill[cborder] (0, 0) rectangle (-3, -#2*16);
        \draw[cborder,ultra~thin] (-12, 0) -- (-12, -#2*16);
    }

    \bool_if:NT \l__ms_flagb_bool {
        % side case: b
        \begin{scope}[yshift=-#2*16]
            \fill[cborder] (0, -9) rectangle (#3*16, -12);
            \fill[color0] (0, -3) rectangle (#3*16, -9);
            \fill[clight] (0, 0) rectangle (#3*16, -3);
        \end{scope}
    }

    \bool_if:NT \l__ms_flagr_bool {
        % side case: r
        \begin{scope}[xshift=#3*16]
            \fill[cborder] (9, 0) rectangle (12, -#2*16);
            \fill[color0] (3, 0) rectangle (9, -#2*16);
            \fill[clight] (0, 0) rectangle (3, -#2*16);
        \end{scope}
    }

    \bool_lazy_and:nnT {\l__ms_flagt_bool} {\l__ms_flagl_bool} {
        % corner case: tl
        \fill[clight] (0, 0) rectangle (-12, 12);
        \fill[color0] (0, 0) rectangle (-9, 9);
        \fill[cborder] (0, 0) rectangle (-3, 3);
        \draw[cborder,ultra~thin] (-12, 0) -- (-12, 12) -- (0, 12);
    }

    \bool_lazy_and:nnT {\l__ms_flagb_bool} {\l__ms_flagl_bool} {
        % corner case: bl
        \begin{scope}[yshift=-#2*16]
            \fill[color0] (0, 0) rectangle (-9, -9);
            \fill[clight] (0, 0) -- (-3, -3) -- (0, -3) -- cycle;
            \fill[clight] (-9, -9) -- (-12, -12) -- (-12, 0) -- (-9, 0) -- cycle;
            \fill[cborder] (0, 0) -- (-3, -3) -- (-3, 0) -- cycle;
            \fill[cborder] (-9, -9) -- (-12, -12) -- (0, -12) -- (0, -9) -- cycle;
            \draw[cborder,ultra~thin] (-12, -12) -- (-12, 0);
        \end{scope}
    }

    \bool_lazy_and:nnT {\l__ms_flagb_bool} {\l__ms_flagr_bool} {
        % corner case: br
        \begin{scope}[xshift=#3*16, yshift=-#2*16]
            \fill[cborder] (0, 0) rectangle (12, -12);
            \fill[color0] (0, 0) rectangle (9, -9);
            \fill[clight] (0, 0) rectangle (3, -3);
        \end{scope}
    }

    \bool_lazy_and:nnT {\l__ms_flagt_bool} {\l__ms_flagr_bool} {
        % corner case: tr
        \begin{scope}[xshift=#3*16]
            \fill[color0] (0, 0) rectangle (9, 9);
            \fill[cborder] (0, 0) -- (3, 3) -- (0, 3) -- cycle;
            \fill[cborder] (9, 9) -- (12, 12) -- (12, 0) -- (9, 0) -- cycle;
            \fill[clight] (0, 0) -- (3, 3) -- (3, 0) -- cycle;
            \fill[clight] (9, 9) -- (12, 12) -- (0, 12) -- (0, 9) -- cycle;
            \draw[cborder,ultra~thin] (12, 12) -- (0, 12);
        \end{scope}
    }
}

\cs_set:Npn \element_colorcell:nn #1#2 {
    \tl_set:Nn \l_tmpa_tl {#2}
    \seq_set_split:NnV \l_tmpa_seq {;} \l_tmpa_tl
    \seq_map_inline:Nn \l_tmpa_seq {
        \tl_set:Nx \l_tmpb_tl {##1}
        \seq_set_split:NnV \l_tmpb_seq {,} \l_tmpb_tl
        \tl_set:Nx \l__ms_width_tl {\seq_item:Nn \l_tmpb_seq {1}}
        \tl_set:Nx \l__ms_height_tl {\seq_item:Nn \l_tmpb_seq {-1}}
        \seq_set_split:NnV \l__ms_width_seq {-} \l__ms_width_tl
        \seq_set_split:NnV \l__ms_height_seq {-} \l__ms_height_tl
        \tl_set:Nx \l__ms_widthx_tl {\seq_item:Nn \l__ms_width_seq {1}}
        \tl_set:Nx \l__ms_widthy_tl {\seq_item:Nn \l__ms_width_seq {-1}}
        \tl_set:Nx \l__ms_heightx_tl {\seq_item:Nn \l__ms_height_seq {1}}
        \tl_set:Nx \l__ms_heighty_tl {\seq_item:Nn \l__ms_height_seq {-1}}
        \int_step_variable:nnNn {\l__ms_widthx_tl} {\l__ms_widthy_tl} \l_tmpa_int {
            \int_step_variable:nnNn {\l__ms_heightx_tl} {\l__ms_heighty_tl} \l_tmpb_int {
                \begin{scope}[xshift=\l_tmpb_int*16,yshift=-\l_tmpa_int*16]
                    \element_cellcolored:n {#1}
                \end{scope}
            }
        }
    }
}

\newcommand{\flag}{\element_flag:}
\newcommand{\mine}{\element_mine:}
\newcommand{\cellup}{\element_cellup:}
\newcommand{\celldown}{\element_celldown:}
\newcommand{\cellnum}[1]{\element_cellnum:n {#1}}
\newcommand{\cell}[3]{\element_cell:nnn {#1}{#2}{#3}}
\newcommand{\row}[2]{\element_line:nn {#1}{#2}{r}}
\newcommand{\col}[2]{\element_line:nn {#1}{#2}{c}}
\newcommand{\border}[1][-]{\element_border:nnn {#1}{1}{1}}
\newcommand{\board}[3][-]{\element_border:nnn {#1}{#2}{#3}}
\newcommand{\colorcell}[2]{\element_colorcell:nn {#1}{#2}}
\ExplSyntaxOff
