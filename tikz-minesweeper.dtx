% \iffalse meta-comment
% !TeX program  = XeLaTeX
% !TeX encoding = UTF-8
% Copyright (C) 2021-2022 by Tian-Yi Pu, Fei-Yu Xiang
% and Yao-Yu Zhu
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3 of this license or (at your option) any later
% version. The latest version of this license is in:
%
%    http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of
% LaTeX version 2005/12/01 or later.
%
% \fi

% \iffalse
%<package>\NeedsTeXFormat{LaTeX2e}[2005/12/01]
%<package>\ProvidesPackage{tikz-minesweeper}
%<package>    [2022/11/25 v0.2.1 Draw a minesweeper board in LaTeX]
%<*batchfile>
\begingroup
\input ctxdocstrip.tex
\keepsilent
\usedir{tex/latex/tikz-minesweeper}

\preamble
Copyright (C) 2021-2022 by Tian-Yi Pu, Fei-Yu Xiang
and Yao-Yu Zhu

This file may be distributed and/or modified under the
conditions of the LaTeX Project Public License, either
version 1.3 of this license or (at your option) any later
version. The latest version of this license is in:

   http://www.latex-project.org/lppl.txt

and version 1.3 or later is part of all distributions of
LaTeX version 2005/12/01 or later.
\endpreamble

\postamble
This package consists of the files tikz-minesweeper.dtx,
                                   README.md,
             and the derived files tikz-minesweeper.sty,
                                   tikz-minesweeper.pdf.
\endpostamble

\generate{\file{tikz-minesweeper.sty}{\from{\jobname.dtx}{package}}}

\obeyspaces
\typeout{****************************************************}
\typeout{*                                                  *}
\typeout{* To finish the installation you have to move the  *}
\typeout{* following file into a directory searched by TeX: *}
\typeout{*                                                  *}
\typeout{*     tikz-minesweeper.sty                         *}
\typeout{*                                                  *}
\typeout{* To produce the documentation run the file        *}
\typeout{* tikz-minesweeper.dtx through LaTeX.              *}
\typeout{*                                                  *}
\typeout{* Happy TeXing (and minesweeping) !                *}
\typeout{*                                                  *}
\typeout{****************************************************}

\endgroup
%</batchfile>
%<*driver>
\documentclass{ctxdoc}
\usepackage{tikz-minesweeper}
\usepackage{verbatim}
\usepackage{booktabs}
\usepackage{colortbl}
\usepackage{subfig}
\usepackage{float}
\usepackage{multicol}
\ctexset{
    section = {
        name = {,},
        number = \arabic{section},
    }
}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
    \DocInput{tikz-minesweeper.dtx}
    \IndexLayout
    \PrintChanges
    \IndexPrologue{%
    \section{\indexname}
    \textit{意大利体的数字表示描述对应索引项的页码,
    带下划线的数字表示定义对应索引项的代码行号,
    罗马字体的数字表示使用对应索引项的代码行号.}}
    \PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{373}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \GetFileInfo{tikz-minesweeper.sty}
%
% \title{\pkg{tikz-minesweeper}宏包使用手册}
% \author{濮天羿~~~~向飞宇\thanks{源代码请参考此仓库: https://github.com/T0nyX1ang/tikz-minesweeper}~~~~朱耀宇}
% \maketitle
%
% \section{绘制示例}
% 下面是一个\pkg{tikz-minesweeper}宏包的绘制示例, 包含了该宏包中最重要的几个指令.
%
% \begin{multicols}{2}
% \iffalse
%<*internal>
% \fi
\begin{verbatim}
    \usepackage{tikz-minesweeper}
    \begin{document}
        \begin{tikzpicture}
            \board[-x]{5}{5}
            \row{0}{A{20}12}
            \row{1}{se40}
            \row{2}{mn67}
            \row{3}{rgbc}
            \row{4}{ov-f}
            \col{4}{358y?}
        \end{tikzpicture}
    \end{document}
\end{verbatim}
% \iffalse
%</internal>
% \fi
%     \columnbreak
%     \begin{figure}[H]
%         \centering
%         \begin{tikzpicture}
%             \board[-x]{5}{5}
%             \row{0}{A{20}12}
%             \row{1}{se40}
%             \row{2}{mn67}
%             \row{3}{rgbc}
%             \row{4}{ov-f}
%             \col{4}{358y?}
%         \end{tikzpicture}
%         \caption{在5x5区域内绘制数字、雷、旗帜、空格和标记}
%     \end{figure}
% \end{multicols}
% \section{绘制指令介绍}
%
% \subsection{基础设定}
% 本宏包中设定单位长度为\textbf{1pt}, 为了与标准扫雷游戏一致, 一格的边长是\textbf{16pt}. 下文如无特别说明, 所有方格的原点都位于左上角, 所有数据的单位均为\textbf{pt}.
%
% 如果需要缩放一个盘面, 推荐使用scope环境中的scale参数, 即采用如下语法:
% \begin{multicols}{2}
% \iffalse
%<*internal>
% \fi
\begin{verbatim}
    \begin{tikzpicture}[scale=2]
        \board{1}{1}
        \row{0}{1}
    \end{tikzpicture}
\end{verbatim}
% \iffalse
%</internal>
% \fi
%     \columnbreak
%     \begin{figure}[H]
%         \centering
%         \begin{tikzpicture}[scale=2]
%              \board[-tlbr]{1}{1}
%              \row{0}{1}
%         \end{tikzpicture}
%         \caption{放大一个格子}
%     \end{figure}
% \end{multicols}
%
% \subsection{配色}
% \pkg{tikz-minesweeper}宏包定义了用于绘制扫雷数字和盘面的配色. 这些配色均给出了标签, 这些标签均可以直接在文档中使用.
%
% \def\ColorTagZero{\textcolor{color0}{|color0|}}
% \def\ColorTagOne{\textcolor{color1}{|color1|}}
% \def\ColorTagTwo{\textcolor{color2}{|color2|}}
% \def\ColorTagThree{\textcolor{color3}{|color3|}}
% \def\ColorTagFour{\textcolor{color4}{|color4|}}
% \def\ColorTagFive{\textcolor{color5}{|color5|}}
% \def\ColorTagSix{\textcolor{color6}{|color6|}}
% \def\ColorTagSeven{\textcolor{color7}{|color7|}}
% \def\ColorTagEight{\textcolor{color8}{|color8|}}
% \def\ColorTagBorder{\textcolor{cborder}{|cborder|}}
% \def\ColorTagLight{\colorbox{cshade}{\textcolor{clight}{|clight|}}}
% \def\ColorTagShade{\textcolor{cshade}{|cshade|}}
% \def\ColorTagFail{\textcolor{cfail}{|cfail|}}
%
% \begin{table}[H]
%     \centering
%     \begin{tabular}{ccccc}
%         \toprule
%         颜色标签          & R   & G   & B   & 场景                              \\
%         \midrule
%         \ColorTagZero{}  & 192 & 192 & 192 & 格子内部 / 外边框                 \\
%         \ColorTagOne{}   & 0   & 0   & 255 & 数字1                             \\
%         \ColorTagTwo{}   & 0   & 128 & 0   & 数字2                             \\
%         \ColorTagThree{} & 255 & 0   & 0   & 数字3                             \\
%         \ColorTagFour{}  & 0   & 0   & 128 & 数字4                             \\
%         \ColorTagFive{}  & 128 & 0   & 0   & 数字5                             \\
%         \ColorTagSix{}   & 0   & 128 & 128 & 数字6                             \\
%         \ColorTagSeven{} & 0   & 0   & 0   & 数字7                             \\
%         \ColorTagEight{} & 128 & 128 & 128 & 数字8                             \\
%         \ColorTagBorder{}  & 160 & 160 & 160 & 边框阴影                          \\
%         \ColorTagLight{} & 255 & 255 & 255 & 高亮                              \\
%         \ColorTagShade{} & 128 & 128 & 128 & 格子阴影 / 按下的格子边界           \\
%         \ColorTagFail{}  & 255 & 0   & 0   & 导致失败的格子                     \\
%         \bottomrule
%     \end{tabular}
%     \caption{颜色对照表}
% \end{table}
%
% \subsection{方格元素}
%
% \begin{function}[added=2022-01-30]{\flag}
% \changes{v0.1.0}{2022/01/30}{新增旗帜命令 \tn{flag}.}
%   \begin{syntax}
%      \tn{flag}
%   \end{syntax}
% \qquad 绘制旗子. 首先用 \ColorTagSeven{} 绘制两层旗子的底座, 然后用 \ColorTagSeven{} 绘制旗子的旗杆, 最后用 \ColorTagThree{} 绘制旗帜本身.
% \end{function}
%
% \begin{figure}[!htp]
%     \centering
%     \begin{tikzpicture}
%         \begin{scope}[scale=10]
%             \flag
%             \draw[gray] (0,0) rectangle (16, -16);
%             \draw[dashed] (0,-4) node[left] {-4} -- (8.5,-4);
%             \draw[dashed,red] (16,-4.5) node[right] {-4.5} -- (8.5,-4.5);
%             \draw[dashed,red] (0,-6.5) node[left] {-6.5} -- (4,-6.5);
%             \draw[dashed,red] (16,-8.5) node[right] {-8.5} -- (8.5,-8.5);
%             \draw[dashed] (0,-11) node[left] {-11} -- (6.5,-11);
%             \draw[dashed] (16,-12) node[right] {-12} -- (12,-12);
%             \draw[dashed] (0,-13) node[left] {-13} -- (5,-13);
%             \draw[dashed,red] (4,0) node[above] {4} -- (4,-6.5);
%             \draw[dashed] (5,-16) node[below] {5} -- (5,-13);
%             \draw[dashed] (6.5,0) node[above] {6.5} -- (6.5,-11);
%             \draw[dashed] (8.5,-16) node[below] {8.5} -- (8.5,-13);
%             \draw[dashed] (9.5,0) node[above] {9.5} -- (9.5,-4);
%             \draw[dashed] (10.5,-16) node[below] {10.5} -- (10.5,-13);
%             \draw[dashed] (12,0) node[above] {12} -- (12,-12);
%         \end{scope}
%     \end{tikzpicture} \quad
%     \begin{tikzpicture}
%         \begin{scope}[scale=12]
%             \mine
%         \end{scope}
%     \end{tikzpicture}
%     \caption{旗子和雷的细节图}
% \end{figure}
%
% \begin{function}[added=2022-01-30]{\mine}
% \changes{v0.1.0}{2022/01/30}{新增地雷命令 \tn{mine}.}
%   \begin{syntax}
%      \tn{mine}
%   \end{syntax}
% \qquad 绘制地雷. 首先用 \ColorTagSeven{} 绘制地雷的梯形突起, 然后用 \ColorTagSeven{} 绘制地雷的圆形本体与本体上的光影.
% \end{function}
%
% \begin{function}[added=2022-01-30]{\cellup}
% \changes{v0.1.0}{2022/01/30}{新增方格弹起时和按下时的命令 \tn{cellup} 和 \tn{celldown}.}
%   \begin{syntax}
%      \tn{cellup}
%   \end{syntax}
% \qquad 绘制鼠标弹起时的方格. 首先分别用 \ColorTagLight{} 和 \ColorTagShade{} 对称地绘制亮面和暗面, 营造立体感, 亮面和暗面的宽度均为2, 然后用 \ColorTagZero{} 绘制底色. 需要注意的是, 该方格的中心点为 (8.5, -8.5), 与 |\celldown| 指令对应方格的中心点不同.
% \end{function}
%
% \begin{function}[added=2022-01-30]{\celldown}
%   \begin{syntax}
%      \tn{celldown}
%   \end{syntax}
% \qquad 绘制鼠标按下时的方格. 首先用 \ColorTagShade{} 绘制方格边界, 然后用 \ColorTagZero{} 绘制底色, 左和上的边界宽度均为1. 需要注意的是, c此时方格的中心点为 (8, -8), 与 |\cellup| 指令对应方格的中心点不同.
% \end{function}
%
% \begin{figure}[!htp]
%     \centering
%     \begin{tikzpicture}[scale=6]
%          \cellup
%          \draw[thick, cborder] (0,0) rectangle (16, -16);
%          \fill[red] (8, -8) circle (0.2);
%     \end{tikzpicture}
%     \quad
%     \begin{tikzpicture}[scale=6]
%          \celldown
%          \draw[thick, cborder] (0,0) rectangle (16, -16);
%          \fill[red] (8.5, -8.5) circle (0.2);
%     \end{tikzpicture}
%     \caption{弹起的方格与按下的方格(包含中心点)}
% \end{figure}
%
% \begin{function}[added=2022-01-30, updated=2022-11-23]{\cellnum}
% \changes{v0.1.0}{2022/01/30}{新增数字命令 \tn{cellnum}.}
% \changes{v0.2.0}{2022/11/23}{将普通数字 1 至 8 调整为矢量化数字 1 至 8.}
%   \begin{syntax}
%      \tn{cellnum} \marg{num=1|2|3|4|5|6|7|8}
%   \end{syntax}
% \qquad 在当前方块中填入带配色的矢量化数字~\raisebox{-0.25ex}{\tikz{\cellnum{1}} \tikz{\cellnum{2}} \tikz{\cellnum{3}} \tikz{\cellnum{4}} \tikz{\cellnum{5}} \tikz{\cellnum{6}} \tikz{\cellnum{7}} \tikz{\cellnum{8}}}. 如果 \meta{num} 不为 1 至 8, 则该指令不起作用. 需要注意的是, 由于扫雷图形本身遵循的原则, 该命令不建议单独使用, 一般与 |\celldown| 指令一起使用.
% \end{function}
%
% \subsection{边框元素}
%
% \begin{function}[added=2022-01-30, updated=2022-11-23]{\border}
%   \begin{syntax}
%      \tn{border} \oarg{border\_type=-|t|l|b|r}
%   \end{syntax}
% \qquad 绘制以格为单位长度(宽度)的边框. t, l, b, r 分别代表上, 左, 下, 右边框, 如果相邻边框同时绘制, 将自动绘制对应的角. 边框分为三层, 中间层使用 \ColorTagZero{} 绘制, 宽度为 6, 内外层用 \ColorTagLight{} 与 \ColorTagBorder{} 提供立体感, 宽度为 3. 提供立体感的方式和 |\cellup| 同理. 左边和上边的高亮外边缘用 \ColorTagBorder{} 封边. 默认参数为 -, 即绘制全部边框.
% \end{function}
%
% \begin{figure}[!htp]
%     \centering
%     \begin{tikzpicture}
%         \begin{scope}[scale=4]
%             \border
%             \draw[dashed] (-14,0) -- (30,0);
%             \draw[dashed] (-14,-16) -- (30,-16);
%             \draw[dashed] (0,14) -- (0,-30);
%             \draw[dashed] (16,14) -- (16,-30);
%             \node at (8, 6) {t};
%             \node at (22, -8) {r};
%             \node at (8, -22) {b};
%             \node at (-6, -8) {l};
%         \end{scope}
%     \end{tikzpicture}
%     \caption{边框组装效果}
% \end{figure}
%
% \subsection{综合模块}
%
% 这一部分的模块是 \pkg{tikz-minesweeper} 提供给用户使用的模块, 如果没有特定的设计需求，推荐仅使用这一部分提供的模块.
%
% \begin{function}[added=2022-01-30, updated=2022-11-23]{\cell}
% \changes{v0.1.0}{2022/01/30}{\tn{cell} 支持参数 \meta{info} 选项: 数字 0-8.}
% \changes{v0.1.0}{2022/01/30}{\tn{cell} 支持参数 \meta{info} 选项: 九种颜色指令 r, g, b, c, y, o, t, l, v.}
% \changes{v0.1.0}{2022/01/30}{\tn{cell} 支持参数 \meta{info} 选项: 旗帜 f, 雷 m.}
% \changes{v0.1.0}{2022/01/30}{\tn{cell} 支持参数 \meta{info} 输入单字符和多字符.}
% \changes{v0.2.0}{2022/11/23}{由于颜色 teal 和 lime 难以与其它颜色分辨, \tn{cell} 参数 \meta{info} 选项取消 t, l.}
% \changes{v0.2.0}{2022/11/23}{\tn{cell} 支持参数 \meta{info} 选项: 半透明雷 s, 踩雷 n 和标记错误 e.}
%   \begin{syntax}
%      \tn{cell} \marg{r} \marg{c} \marg{info}
%   \end{syntax}
% \qquad 在第 \meta{r} 行第 \meta{c} 列交叉处绘制包含内容 \meta{info} 的方格, 行列均从 0 开始编号. \meta{info} 的检查顺序如下:
% \begin{itemize}
%     \item 如果 \meta{info} 是 0-8 的数字, 方格是按下状态并且数字会上色;
%     \item 如果 \meta{info} 是 r(红色, red), g(绿色, green), b(蓝色, blue), c(cyan, 湖蓝色), y(yellow, 黄色), o(orange, 橘色), v(violet, 紫色) 中的一个, 方格是抬起状态, 且会染成对应颜色, 方格颜色的透明度为\textbf{0.2};
%     \item 如果 \meta{info} 是 f, 方格是弹起状态并且会插旗.
%     \item 如果 \meta{info} 是 m, 方格是按下状态并且会显示地雷.
%     \item 如果 \meta{info} 是 s, 方格是按下状态并且会显示半透明的地雷, 即将地雷的颜色调整为 \ColorTagShade{}.
%     \item 如果 \meta{info} 是 n, 方格是按下状态并且会显示踩到地雷, 首先用 \ColorTagShade{} 绘制方格边界, 然后用 \ColorTagFail{} 绘制底色.
%     \item 如果 \meta{info} 是 e, 方格是按下状态并且会显示标记错误的地雷, 即在普通地雷的基础上, 进一步用 \ColorTagFail{} 绘制一个叉.
%     \item 如果 \meta{info} 是 -, 方格是弹起状态并且无字符.
%     \item 如果 \meta{info} 是其他\textbf{单个}字符, 方格是弹起状态并包含该字符, 字符中心为 (8, -8).
%     \item 如果 \meta{info} 包含\textbf{多个}字符, 将会自动缩小字符, 转化为 |\tiny| 模式.
% \end{itemize}
% \end{function}
%
% \begin{function}[added=2022-01-30]{\row}
% \changes{v0.1.0}{2022/01/30}{新增 \tn{row} 命令和 \tn{col} 命令.}
%   \begin{syntax}
%      \tn{row} \marg{r} \marg{seq:info}
%   \end{syntax}
% \qquad 在第 \meta{r} 行从左到右绘制多个方格. \meta{seq:info} 为一个含有 \meta{info} 的序列, 序列中的每个元素作为 |\cell| 的第三个参数. 如果希望输入多个字符, 需要使用大括号, 例如 |1{23}4| 的序列长度为3, 该序列中的元素分别为 1, 23 和 4.
% \end{function}
%
% \begin{function}[added=2022-01-30]{\col}
%   \begin{syntax}
%      \tn{col} \marg{c} \marg{seq:info}
%   \end{syntax}
% \qquad 在第 \meta{c} 列从上到下绘制多个方格, 语法与 |\row| 一致.
% \end{function}
%
% \begin{function}[added=2022-01-30, updated=2022-11-23]{\board}
% \changes{v0.1.0}{2022/01/30}{新增 \tn{board} 指令与四种边界类型.}
% \changes{v0.2.0}{2022/11/23}{新增标记行列坐标选项 x.}
% \changes{v0.2.0}{2022/11/23}{提前绘制同色邻接区域, 以避免格子的同色邻接区域导致的渲染问题.}
%   \begin{syntax}
%      \tn{board} \oarg{border\_type=-|t|l|b|r|x} \marg{r} \marg{c}
%   \end{syntax}
% \qquad 绘制 \meta{r} 行 \meta{c} 列的边框, t, r, b, l 为与 |\border| 对应可叠加的边框开关, 默认全部开启, 即地图中有完整边框, 如果使用了 - 标志, 代表去除某个特定边框. 此选项可以根据自己需求进行定制. 解析器只会解析最后一个 - 标志的位置, 即 |\border[-br-tl-lb-b]| 会被解析为 |\border[-b]|. 解析器不会解析重复的参数, 即 |\border[ttblbtlb]| 会被解析为 |\border[tlb]|. 可选指令 x 表示是否显示横纵坐标, 默认为不显示.
%
% 在绘制边框的过程中, 该指令会根据边框类型, 利用 \pkg{tikz} 宏包的截取指令, 自动以 \ColorTagBorder{} 为颜色, 绘制一个\textbf{0.2pt}的外边框. 同时, 为了避免格子的同色邻接区域导致的渲染问题, 该指令会提前绘制同色邻接区域.
% \end{function}
%
% \begin{figure}[!htp]
%     \captionsetup[subfloat]{labelformat=empty}
%     \centering
%     \subfloat[\texttt{\textbackslash board}]{\begin{tikzpicture}[scale=2.5]\board{1}{1}\end{tikzpicture}}
%     \quad
%     \subfloat[\texttt{\textbackslash board[tlb]} 或 \\ \texttt{\textbackslash board[-r]} ]{\begin{tikzpicture}[scale=2.5]\border[-r]\end{tikzpicture}}
%     \quad
%     \subfloat[\texttt{\textbackslash board[tlr]} 或 \\ \texttt{\textbackslash board[-b]} ]{\begin{tikzpicture}[scale=2.5]\border[-b]\end{tikzpicture}}
%     \quad
%     \subfloat[\texttt{\textbackslash board[tl]}]{\begin{tikzpicture}[scale=2.5]\border[tl]\end{tikzpicture}}
%     \caption{边框指令示例}
% \end{figure}
%
% \begin{figure}[!htp]
%     \captionsetup[subfloat]{labelformat=empty}
%     \centering
%     \subfloat[\texttt{\textbackslash board[-x]}]{\begin{tikzpicture}\board[-x]{3}{3}\end{tikzpicture}}
%     \quad
%     \subfloat[\texttt{\textbackslash board[tlx]}]{\begin{tikzpicture}\board[tlx]{3}{3}\end{tikzpicture}}
%     \quad
%     \subfloat[\texttt{\textbackslash board[-tlx]}]{\begin{tikzpicture}\board[-tlx]{3}{3}\end{tikzpicture}}
%     \caption{横纵坐标显示示例}
% \end{figure}
%
% \begin{function}[added=2022-01-30]{\colorcell}
% \changes{v0.1.0}{2022/01/30}{新增 \tn{colorcell} 指令.}
%   \begin{syntax}
%      \tn{colorcell} \marg{color} \marg{seq: pos}
%   \end{syntax}
% \qquad 将\meta{seq: pos}位置的方格染色为\meta{color}颜色. \meta{color} 仅能传入 |\cell| 中接受的颜色类型. \meta{seq: pos} 定义了一个位置序列, 格式如下:
% \begin{itemize}
%     \item 序列中的每个元素以分号(;)分隔.
%     \item 对于每个元素, 以逗号(,)分隔行区间和列区间.
%     \item 对于每个区间, 如果它是\textbf{单字符}, 则表示区间的起始位置和终止位置相同, 均为该字符; 否则需要以减号(-)分隔起始位置和终止位置.
% \end{itemize}
% 下面给出一些示例:
%  \begin{ctexexam}
%    \colorcell{g}{0,0-1;0-1,3} % 代表用绿色染色0行, 0-1列和0-1行, 3列的一共4个格子.
%    \colorcell{r}{0,4;1-2,0-2} % 代表用红色染色0行, 4列和1-2行, 0-2列的一共7个格子.
%  \end{ctexexam}
% \end{function}
%
% \begin{multicols}{2}
% \iffalse
%<*internal>
% \fi
\begin{verbatim}
    \begin{tikzpicture}
        \board{3}{5}
        \row{0}{f{20}123}
        \row{1}{A-405}
        \row{2}{m-678}
        \colorcell{g}{0,0-1;0-1,3}
        \colorcell{r}{0,4;1-2,0-2}
    \end{tikzpicture}
\end{verbatim}
% \iffalse
%</internal>
% \fi
%     \columnbreak
%     \begin{figure}[H]
%         \centering
%         \begin{tikzpicture}
%             \board{3}{5}
%             \row{0}{f{20}123}
%             \row{1}{A-405}
%             \row{2}{m-678}
%             \colorcell{g}{
%                 0,0-1;0-1,3
%             }
%             \colorcell{r}{
%                 0,4;1-2,0-2
%             }
%         \end{tikzpicture}
%         \caption{方格染色示例}
%     \end{figure}
% \end{multicols}
%
% \StopEventually{}
%
% \begin{implementation}
%
% \clearpage
%
% \section{代码实现}
% 定义 \pkg{tikz-minesweeper} 宏包的依赖, 分别为 \LaTeXiii{} 和 \pkg{tikz} 宏包.
%    \begin{macrocode}

\RequirePackage{expl3}
\RequirePackage{tikz}

%    \end{macrocode}
%
% 定义 \pkg{tikz-minesweeper} 宏包的配色方案. 在实际使用该宏包时, 可以使用类似方法定义自己的配色方案.
%    \begin{macrocode}
\definecolor{color0}{RGB}{192,192,192} % color for blank cell
\definecolor{color1}{RGB}{0,0,255} % color for cell 1
\definecolor{color2}{RGB}{0,128,0} % color for cell 2
\definecolor{color3}{RGB}{255,0,0} % color for cell 3
\definecolor{color4}{RGB}{0,0,128} % color for cell 4
\definecolor{color5}{RGB}{122,43,26} % color for cell 5
\definecolor{color6}{RGB}{0,128,128} % color for cell 6
\definecolor{color7}{RGB}{0,0,0} % color for cell 7
\definecolor{color8}{RGB}{128,128,128} % color for cell 8
\definecolor{cborder}{RGB}{160,160,160} % color for border
\definecolor{clight}{RGB}{255,255,255} % color for whitespace
\definecolor{cshade}{RGB}{128,128,128} % color for shades
\definecolor{cfail}{RGB}{255,0,0} % color for failed cells

%    \end{macrocode}
%
% 定义 \pkg{tikz-minesweeper} 宏包的基本单位, 即\textbf{1pt}.
%    \begin{macrocode}
\tikzset{x=1pt, y=1pt} % Default unit

%    \end{macrocode}
%
% 打开\LaTeXiii{}编程环境.
%    \begin{macrocode}
\ExplSyntaxOn

%    \end{macrocode}
%
% 定义 \pkg{tikz-minesweeper} 宏包中的变量.
%    \begin{macrocode}
\str_const:Nn \c__msweeper_valid_numbers_str {012345678}
\str_const:Nn \c__msweeper_valid_colors_str {rgbcyov}
\str_new:N \l__msweeper_cellcolor_str
\int_new:N \l__msweeper_rows_int
\int_new:N \l__msweeper_cols_int
\int_new:N \l__msweeper_tmargin_int
\int_new:N \l__msweeper_lmargin_int
\int_new:N \l__msweeper_bmargin_int
\int_new:N \l__msweeper_rmargin_int

%    \end{macrocode}
%
% \begin{macro}{\msweeper_flag:}
% \qquad 绘制旗子.
%    \begin{macrocode}
\cs_set:Nn \msweeper_flag: {
    \fill[color7] (5, -13) rectangle (12, -12); % lower base
    \fill[color7] (6.5, -13) rectangle (10.5, -11); % upper base
    \fill[color7] (8.5, -13) rectangle (9.5, -4); % pole
    \fill[color3] (8.5, -4.5) -- (4, -6.5) -- (8.5, -8.5) -- cycle; % red flag
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_mine:}
% \qquad 绘制地雷.
%    \begin{macrocode}
\cs_set:Nn \msweeper_mine: {
    \int_step_inline:nnnn {0} {45} {135} {
        \fill[color7, xshift=8.5, yshift=-8.5, rotate=##1] (-6.5, 0.4) -- (0, 1.5) --
            (6.5, 0.4) -- (6.5, -0.4) -- (0, -1.5) -- (-6.5, -0.4) -- cycle; % spikes
    }
    \shade[ball~color=color7] (8.5,-8.5) circle (4.5); % body
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_mine_shaded:}
% \qquad 绘制半透明的地雷. 需要注意的是, 半透明的雷的颜色没有与其它颜色解耦, 如果定义了不同的配色方案, 请谨慎绘制这种地雷.
%    \begin{macrocode}
\cs_set:Nn \msweeper_mine_shaded: {
    \int_step_inline:nnnn {0} {45} {135} {
        \fill[cshade, xshift=8.5, yshift=-8.5, rotate=##1] (-6.5, 0.4) -- (0, 1.5) --
            (6.5, 0.4) -- (6.5, -0.4) -- (0, -1.5) -- (-6.5, -0.4) -- cycle; % spikes
    }
    \shade[ball~color=cshade] (8.5,-8.5) circle (4.5); % body
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_cellup:}
% \qquad 绘制鼠标弹起时的方格.
%    \begin{macrocode}
\cs_set:Nn \msweeper_cellup: {
    \fill[clight] (0, 0) -- (16, 0) -- (0, -16) -- cycle; % highlight
    \fill[cshade] (16, -16) -- (0, -16) -- (16, 0) -- cycle; % shade
    \fill[color0] (2, -2) rectangle (14, -14); % background
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_celldown:}
% \qquad 绘制鼠标按下后的方格.
%    \begin{macrocode}
\cs_set:Nn \msweeper_celldown: {
    \fill[cshade] (0, -16) rectangle (16, 0); % border
    \fill[color0] (1, -16) rectangle (16, -1); % background
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_cellfail:}
% \qquad 绘制由于踩雷而失败的方格.
%    \begin{macrocode}
\cs_set:Nn \msweeper_cellfail: {
    \fill[cshade] (0, -16) rectangle (16, 0); % border
    \fill[cfail] (1, -16) rectangle (16, -1); % background
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_misflagfail:}
% \qquad 绘制由于标记错误而失败的方格.
%    \begin{macrocode}
\cs_set:Nn \msweeper_misflagfail: {
    \msweeper_mine:
    \draw[cfail, line~width=1] (2.5, -2.5) -- (14.5, -14.5); % cross line
    \draw[cfail, line~width=1] (2.5, -14.5) -- (14.5, -2.5); % cross line
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_cellnum:n}
% \qquad 用 \ColorTagOne{} 至 \ColorTagEight{} 绘制给定的矢量化数字 1 至 8, 接受一个参数 |#1|. 参数 |#1| 仅支持传入 1 至 8, 传入其它值将会被忽略.
%    \begin{macrocode}
\cs_set:Npn \msweeper_cellnum:n #1 {
    \str_case:nn {#1} {
        % Textures come from https://github.com/Minesweeper-World/MS-Texture/
        % Positions tweaked by ./support/tikz-path-xyshift.py
        {1} { \fill[color1] (5, -11.5) -- (5, -13.5) -- (12, -13.5) -- (12, -11.5) --
            (10, -11.5) -- (10, -3.5) -- (8.5, -3.5) -- (5, -7.0) -- (5, -7.5) --
            (7, -7.5) -- (7, -11.5) -- cycle; }
        {2} { \fill[color2] (3.5, -6.5) .. controls (3.5, -3.5) .. (7.0, -3.5) --
            (10.0, -3.5) .. controls (13.5, -3.5) .. (13.5, -6.5) .. controls
            (13.5, -9.0) and (7.5, -10.5) .. (6.5, -11.5) -- (13.5, -11.5) --
            (13.5, -13.5) -- (3.5, -13.5) -- (3.5, -12.0) .. controls (3.5, -8.5)
            and (10.5, -8.5) .. (10.5, -6.5) .. controls (10.5, -5.5) ..
            (9.5, -5.5) -- (7.5, -5.5) .. controls (6.5, -5.5) ..
            (6.5, -6.5) -- cycle; }
        {3} { \fill[color3] (3.5, -3.5) -- (10.0, -3.5) .. controls (13.5, -3.5) ..
            (13.5, -6.5) .. controls (13.5, -8.0) .. (12.0, -8.5) .. controls
            (13.5, -9.0) .. (13.5, -10.5) .. controls (13.5, -13.5) ..
            (10.0, -13.5) -- (3.5, -13.5) -- (3.5, -11.5) -- (9.5, -11.5) ..
            controls (10.5, -11.5) .. (10.5, -10.5) .. controls (10.5, -9.5) ..
            (9.5, -9.5) -- (6.5, -9.5) -- (6.5, -7.5) -- (9.5, -7.5) .. controls
            (10.5, -7.5) .. (10.5, -6.5) .. controls (10.5, -5.5) .. (9.5, -5.5) --
            (3.5, -5.5) -- cycle; }
        {4} { \fill[color4] (6.0, -3.5) -- (3.5, -8.5) -- (3.5, -9.5) --
            (9.5, -9.5) -- (9.5, -13.5) -- (12.5, -13.5) -- (12.5, -9.5) --
            (13.5, -9.5) -- (13.5, -7.5) -- (12.5, -7.5) -- (12.5, -3.5) --
            (9.5, -3.5) -- (9.5, -7.5) -- (7.0, -7.5) -- (9.0, -3.5) -- cycle; }
        {5} { \fill[color5] (3.5, -3.5) -- (13.5, -3.5) -- (13.5, -5.5) --
            (6.5, -5.5) -- (6.5, -7.5) -- (10.0, -7.5) .. controls (13.5, -7.5) ..
            (13.5, -10.5) .. controls (13.5, -13.5) .. (10.0, -13.5) --
            (3.5, -13.5) -- (3.5, -11.5) -- (9.5, -11.5) .. controls
            (10.5, -11.5) .. (10.5, -10.5) .. controls (10.5, -9.5) ..
            (9.5, -9.5) -- (3.5, -9.5) -- cycle; }
        {6} { \fill[color6] (12.5, -3.5) -- (12.5, -5.5) -- (8.5, -5.5) ..
            controls (6.5, -5.5) .. (6.5, -6.5) -- (6.5, -10.5) .. controls
            (6.5, -11.5) .. (8.5, -11.5) .. controls (10.5, -11.5) ..
            (10.5, -10.5) .. controls (10.5, -9.5) .. (8.5, -9.5) -- (6.5, -9.5) --
            (6.5, -7.5) -- (10.0, -7.5) .. controls (13.5, -7.5) ..
            (13.5, -10.5) .. controls (13.5, -13.5) .. (10.0, -13.5) --
            (7.0, -13.5) .. controls (3.5, -13.5) .. (3.5, -10.5) --
            (3.5, -6.5) .. controls (3.5, -3.5) .. (7.0, -3.5) -- cycle; }
        {7} { \fill[color7] (3.5, -3.5) -- (13.5, -3.5) -- (13.5, -6.5) --
            (10.0, -13.5) -- (7.0, -13.5) -- (10.5, -6.5) -- (10.5, -5.5) --
            (3.5, -5.5) -- cycle; }
        {8} { \fill[color8] (7.0, -3.5) -- (10.0, -3.5) .. controls (13.5, -3.5) ..
            (13.5, -6.5) .. controls (13.5, -8.0) .. (12.0, -8.5) -- (10.5, -8.5) --
            (10.5, -6.5) .. controls (10.5, -5.5) .. (9.5, -5.5) -- (7.5, -5.5) ..
            controls (6.5, -5.5) .. (6.5, -6.5) .. controls (6.5, -7.5) ..
            (7.5, -7.5) -- (9.5, -7.5) .. controls (10.5, -7.5) .. (10.5, -6.5) --
            (10.5, -10.5) .. controls (10.5, -9.5) .. (9.5, -9.5) -- (7.5, -9.5) ..
            controls (6.5, -9.5) .. (6.5, -10.5) .. controls (6.5, -11.5) ..
            (7.5, -11.5) -- (9.5, -11.5) .. controls (10.5, -11.5) ..
            (10.5, -10.5) -- (10.5, -8.5) -- (12.0, -8.5) .. controls
            (13.5, -9.0) .. (13.5, -10.5) .. controls (13.5, -13.5) ..
            (10.0, -13.5) -- (7.0, -13.5) .. controls (3.5, -13.5) .. (3.5, -10.5) ..
            controls (3.5, -9.0) .. (5.0, -8.5) .. controls (3.5, -8.0) ..
            (3.5, -6.5) .. controls (3.5, -3.5) .. (7.0, -3.5) -- cycle; }
    }
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_cellcolored:n}
% \qquad 绘制鼠标按下时的染色方格, 接受一个参数 |#1|. 参数 |#1| 仅支持传入 r, g, b, c, y, o, v 中的一个, 传入其它值将会被忽略.
%    \begin{macrocode}
\cs_set:Npn \msweeper_cellcolored:n #1 {
    \str_case:nnT {#1} {
        {r} { \str_set:Nn \l__msweeper_cellcolor_str {red} }
        {g} { \str_set:Nn \l__msweeper_cellcolor_str {green} }
        {b} { \str_set:Nn \l__msweeper_cellcolor_str {blue} }
        {c} { \str_set:Nn \l__msweeper_cellcolor_str {cyan} }
        {y} { \str_set:Nn \l__msweeper_cellcolor_str {yellow} }
        {o} { \str_set:Nn \l__msweeper_cellcolor_str {orange} }
        {v} { \str_set:Nn \l__msweeper_cellcolor_str {violet} }
    } {
        \begin{scope}
            \fill[color=\l__msweeper_cellcolor_str, opacity=0.2]
                (0, 0) rectangle (16, -16);
        \end{scope}
    }
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_cell:nnn}
% \qquad 绘制方格, 接受三个参数 |#1|, |#2|, |#3|. 在坐标(|#3|, |#2|)处绘制一个方格, 方格中的内容由 |#1| 决定, |#1|可以传入任意参数. 该函数依次检查 |#1| 是否为数字参数 (012345678), 颜色参数 (rgbcyov), 雷与旗帜参数 (fmsne-), 除上述字符外的单字符参数以及多字符参数.
%    \begin{macrocode}
\cs_set:Npn \msweeper_cell:nnn #1#2#3 {
    \sffamily
    \begin{scope}[xshift=#3*16, yshift=-#2*16]
        \tl_if_single:nTF {#1} {
            % single token
            \str_if_in:NnTF \c__msweeper_valid_numbers_str {#1} {
                \msweeper_celldown: \msweeper_cellnum:n {#1} % number
            } {
                \str_if_in:NnTF \c__msweeper_valid_colors_str {#1} {
                    \msweeper_cellup: \msweeper_cellcolored:n {#1} % color
                } {
                    \str_case:nnF {#1} {
                        {f} { \msweeper_cellup: \msweeper_flag: } % flag
                        {m} { \msweeper_celldown: \msweeper_mine: } % mine
                        {s} { \msweeper_celldown: \msweeper_mine_shaded: } % shaded
                        {n} { \msweeper_cellfail: \msweeper_mine: } % blasted
                        {e} { \msweeper_celldown: \msweeper_misflagfail: } % misflagged
                        {-} { \msweeper_cellup: } % empty
                    } {
                        \msweeper_cellup:
                        \node[text~centered, text={color7}] at (8, -8) {\textbf{#1}};
                    } % normal label
                }
            }
        } {
            \msweeper_cellup:
            \node[text~centered, text={color7}] at (8, -8) {\textbf{\tiny #1}};
        } % tiny label
    \end{scope}
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_line:nnn}
% \qquad 绘制一行或者一列的格子, 接受三个参数 |#1|, |#2|, |#3|. |#1| 为行号或者列号, |#2| 为格子内容, |#3| 为按行首(r)或者按列首(c)依次绘制格子, 其余参数将不会绘制.
%    \begin{macrocode}
\cs_set:Npn \msweeper_line:nnn #1#2#3 {
    \int_zero:N \l_tmpa_int
    \tl_map_inline:nn {#2} {
        \str_case:nn {#3} {
            {r} { \msweeper_cell:nnn {##1}{#1}{\l_tmpa_int} }
            {c} { \msweeper_cell:nnn {##1}{\l_tmpa_int}{#1} }
        }
        \int_incr:N \l_tmpa_int
    }
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_row_col_marker:}
% \qquad 绘制行列坐标数字.
%    \begin{macrocode}
\cs_set:Nn \msweeper_row_col_marker: {
    \sffamily
    % show axis x
    \int_step_inline:nnn {0} {\l__msweeper_cols_int - 1} {
        \node[text~centered, text={color7}, xshift=16*##1] at
            (8, 6 + \l__msweeper_tmargin_int) {\textbf{\tiny ##1}};
    }

    % show axis y
    \int_step_inline:nnn {0} {\l__msweeper_rows_int - 1} {
        \node[text~centered, text={color7}, yshift=-16*##1] at
            (-6 - \l__msweeper_lmargin_int, -8) {\textbf{\tiny ##1}};
    }
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_gap_filler:}
% \qquad 由于渲染问题, 绘制格子时, 同色区域之间可能会出现一个空白的缝隙, 该函数用于提前填充这些缝隙.
%    \begin{macrocode}
\cs_set:Nn \msweeper_gap_filler: {
    % draw lines in advance to avoid gaps
    \int_step_variable:nnNn {1} {\l__msweeper_cols_int - 1} \l_tmpa_tl {
        \int_step_variable:nnNn {1} {\l__msweeper_rows_int} \l_tmpb_tl {
            \fill[cshade, xshift=\l_tmpa_tl*16, yshift=-\l_tmpb_tl * 16] (0, 0) --
                (-0.5, 0.5) -- (-0.5, 14.5) -- (0, 15) -- (-0.5, 15.5) -- (0, 16) --
                (0.5, 15.5) -- (0, 15) -- (0.5, 14.5) -- (0.5, 0.5) -- cycle;
        }
    }

    \int_step_variable:nnNn {1} {\l__msweeper_rows_int - 1} \l_tmpb_tl {
        \int_step_variable:nnNn {1} {\l__msweeper_cols_int} \l_tmpa_tl {
            \fill[cshade, xshift=\l_tmpa_tl*16, yshift=-\l_tmpb_tl * 16] (0, 0) --
                (-0.5, -0.5) -- (-14.5, -0.5) -- (-15, 0) -- (-15.5, -0.5) --
                (-16, 0) -- (-15.5, 0.5) -- (-15, 0) -- (-14.5, 0.5) --
                (-0.5, 0.5) -- cycle;
        }
    }
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_border:nnn}
% \qquad 绘制边框, 接受三个参数 |#1|, |#2|, |#3|. |#1| 为边框种类参数, |#2| 为行数, |#3| 为列数. 参数 |#1| 可以传入 t, l, b, r, -, x 中的任意多个值.
%    \begin{macrocode}
\cs_set:Npn \msweeper_border:nnn #1#2#3 {
    \int_set:Nn \l__msweeper_rows_int {#2}
    \int_set:Nn \l__msweeper_cols_int {#3}

    \bool_set_false:N \l_tmpa_bool
    \int_zero:N \l__msweeper_tmargin_int
    \int_zero:N \l__msweeper_lmargin_int
    \int_zero:N \l__msweeper_bmargin_int
    \int_zero:N \l__msweeper_rmargin_int

    \tl_map_inline:nn {#1} {
        \str_case:nn {##1} {
            {-} {
                \bool_set_true:N \l_tmpa_bool
                \int_set:Nn \l__msweeper_tmargin_int {12}
                \int_set:Nn \l__msweeper_lmargin_int {12}
                \int_set:Nn \l__msweeper_bmargin_int {12}
                \int_set:Nn \l__msweeper_rmargin_int {12}
            }
            {t} { \int_set:Nn \l__msweeper_tmargin_int {12 - 12 * \l_tmpa_bool} }
            {l} { \int_set:Nn \l__msweeper_lmargin_int {12 - 12 * \l_tmpa_bool} }
            {b} { \int_set:Nn \l__msweeper_bmargin_int {12 - 12 * \l_tmpa_bool} }
            {r} { \int_set:Nn \l__msweeper_rmargin_int {12 - 12 * \l_tmpa_bool} }
        }
    }

    % draw row and column numbers
    \str_if_in:nnT {#1} {x} { \msweeper_row_col_marker: }

    % draw outer border with clipping
    % clip the area inside of a scope to avoid side effects
    \begin{scope}
        \clip (-\l__msweeper_lmargin_int, \l__msweeper_tmargin_int) rectangle
            (\l__msweeper_cols_int*16 + \l__msweeper_rmargin_int,
            -\l__msweeper_rows_int*16 - \l__msweeper_bmargin_int);
        \fill[clight] (-12, 12) -- (\l__msweeper_cols_int*16 + 12, 12) --
            (\l__msweeper_cols_int*16, 0) -- (0, 0) --
            (0, -\l__msweeper_rows_int*16) --
            (-12, -\l__msweeper_rows_int*16 - 12) -- cycle;
        \fill[cborder] (\l__msweeper_cols_int*16, -\l__msweeper_rows_int*16) --
            (\l__msweeper_cols_int*16, 0) -- (\l__msweeper_cols_int*16 + 12, 12) --
            (\l__msweeper_cols_int*16 + 12, -\l__msweeper_rows_int*16 - 12) --
            (-12, -\l__msweeper_rows_int*16 - 12) --
            (0, -\l__msweeper_rows_int*16) -- cycle;
        \fill[color0] (-9, 9) -- (\l__msweeper_cols_int*16 + 9, 9) --
            (\l__msweeper_cols_int*16 + 9, 0) -- (0, 0) --
            (0, -\l__msweeper_rows_int*16) --
            (-9, -\l__msweeper_rows_int*16 - 9) -- cycle;
        \fill[color0] (\l__msweeper_cols_int*16, -\l__msweeper_rows_int*16) --
            (\l__msweeper_cols_int*16, 0) -- (\l__msweeper_cols_int*16 + 9, 9) --
            (\l__msweeper_cols_int*16 + 9, -\l__msweeper_rows_int*16 - 9) --
            (-9, -\l__msweeper_rows_int*16 - 9) --
            (-9, -\l__msweeper_rows_int*16) -- cycle;
        \fill[cborder] (-3, 3) -- (\l__msweeper_cols_int*16 + 3, 3) --
            (\l__msweeper_cols_int*16, 0) -- (0, 0) --
            (0, -\l__msweeper_rows_int*16) --
            (-3, -\l__msweeper_rows_int*16 - 3) -- cycle;
        \fill[clight] (\l__msweeper_cols_int*16, -\l__msweeper_rows_int*16) --
            (\l__msweeper_cols_int*16, 0) -- (\l__msweeper_cols_int*16 + 3, 3) --
            (\l__msweeper_cols_int*16 + 3, -\l__msweeper_rows_int*16 - 3) --
            (-3, -\l__msweeper_rows_int*16 - 3) --
            (0, -\l__msweeper_rows_int*16) -- cycle;
    \end{scope}

    \draw[cborder, line~width=0.4pt]
        (-\l__msweeper_lmargin_int, \l__msweeper_tmargin_int) rectangle
        (\l__msweeper_cols_int*16 + \l__msweeper_rmargin_int,
        -\l__msweeper_rows_int*16 - \l__msweeper_bmargin_int);

    \msweeper_gap_filler:
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\msweeper_colorcell:nn}
% \qquad 给多个区域的方格染色, 接受两个参数 |#1|, |#2|. |#1| 仅能传入 |\msweeper_cellcolored:n| 中接受的颜色, |#2| 传入待绘制的多个区域.
%    \begin{macrocode}
\cs_set:Npn \msweeper_colorcell:nn #1#2 {
    \tl_set:Nn \l_tmpa_tl {#2}
    \seq_set_split:NnV \l_tmpa_seq {;} \l_tmpa_tl
    \seq_map_inline:Nn \l_tmpa_seq {
        \tl_set:Nx \l_tmpb_tl {##1}
        \seq_set_split:NnV \l_tmpb_seq {,} \l_tmpb_tl
        \tl_set:Nx \l__ms_width_tl {\seq_item:Nn \l_tmpb_seq {1}}
        \tl_set:Nx \l__ms_height_tl {\seq_item:Nn \l_tmpb_seq {-1}}
        \seq_set_split:NnV \l__ms_width_seq {-} \l__ms_width_tl
        \seq_set_split:NnV \l__ms_height_seq {-} \l__ms_height_tl
        \tl_set:Nx \l__ms_widthx_tl {\seq_item:Nn \l__ms_width_seq {1}}
        \tl_set:Nx \l__ms_widthy_tl {\seq_item:Nn \l__ms_width_seq {-1}}
        \tl_set:Nx \l__ms_heightx_tl {\seq_item:Nn \l__ms_height_seq {1}}
        \tl_set:Nx \l__ms_heighty_tl {\seq_item:Nn \l__ms_height_seq {-1}}
        \int_step_variable:nnNn {\l__ms_widthx_tl} {\l__ms_widthy_tl} \l_tmpc_tl {
            \int_step_variable:nnNn {\l__ms_heightx_tl} {\l__ms_heighty_tl} \l_tmpd_tl {
                \begin{scope}[xshift=\l_tmpd_tl*16,yshift=-\l_tmpc_tl*16]
                    \msweeper_cellcolored:n {#1}
                \end{scope}
            }
        }
    }
}

%    \end{macrocode}
% \end{macro}
%
% 提供不显式调用 \LaTeXiii{} 的用户接口.
%    \begin{macrocode}
\newcommand{\flag}{\msweeper_flag:}
\newcommand{\mine}{\msweeper_mine:}
\newcommand{\cellup}{\msweeper_cellup:}
\newcommand{\celldown}{\msweeper_celldown:}
\newcommand{\cellnum}[1]{\msweeper_cellnum:n {#1}}
\newcommand{\cell}[3]{\msweeper_cell:nnn {#1}{#2}{#3}}
\newcommand{\row}[2]{\msweeper_line:nnn {#1}{#2}{r}}
\newcommand{\col}[2]{\msweeper_line:nnn {#1}{#2}{c}}
\newcommand{\border}[1][-]{\msweeper_border:nnn {#1}{1}{1}}
\newcommand{\board}[3][-]{\msweeper_border:nnn {#1}{#2}{#3}}
\newcommand{\colorcell}[2]{\msweeper_colorcell:nn {#1}{#2}}

%    \end{macrocode}
%
% 关闭 \LaTeXiii{} 编程环境.
%    \begin{macrocode}
\ExplSyntaxOff

%    \end{macrocode}
%
% \end{implementation}
%
% \Finale
%
\endinput
